# vim:ts=4:
# Make configuration

_NUMCPU			:= $(shell grep processor /proc/cpuinfo|wc -l)
DIST			?= core2
PROFILING		?= 0
MAKEFLAGS		+= -j$(_NUMCPU)

# HARUHI_FEATURES can hold following strings:
#   HARUHI_SSE3				- use if compiler is able to generate SSE3 instructions.
#   HARUHI_IEEE754			- use if compiler uses IEEE-754 compatible CPU.
#   HARUHI_ASSERTS			- enables dynamic assertions
#   HARUHI_ASSERTS_FATAL	- makes assertion failures fatal (self kill).

ifeq ($(DIST),core2)
	HARUHI_FEATURES += HARUHI_SSE3
	HARUHI_FEATURES	+= HARUHI_IEEE754
	HARUHI_FEATURES += HARUHI_ASSERTS
	HARUHI_FEATURES += HARUHI_ASSERTS_FATAL
	CXXFLAGS		+= -O4 -g -finline -march=core2 -mtune=core2 -ffast-math -falign-functions=4 -mpreferred-stack-boundary=4 -funroll-loops -mfpmath=sse -msse4.1 -fomit-frame-pointer
endif

ifeq ($(DIST),i686)
	HARUHI_FEATURES += HARUHI_SSE3
	HARUHI_FEATURES	+= HARUHI_IEEE754
	HARUHI_FEATURES += HARUHI_ASSERTS
	HARUHI_FEATURES += HARUHI_ASSERTS_FATAL
	CXXFLAGS		+= -O4 -g -finline -march=i686 -ffast-math -falign-functions=4 -mpreferred-stack-boundary=4 -funroll-loops -fomit-frame-pointer
endif

ifeq ($(DIST),debug)
	HARUHI_FEATURES += HARUHI_ASSERTS
	HARUHI_FEATURES += HARUHI_ASSERTS_FATAL
	CXXFLAGS		+= -O2 -ggdb3 -fno-inline -m128bit-long-double -fno-eliminate-unused-debug-types -ffast-math -D_GLIBCXX_DEBUG
endif

ifeq ($(DIST),profiled)
	LDFLAGS			+= -pg
	CXXFLAGS		+= -O4 -g -finline -march=core2 -mtune=core2 -ffast-math -falign-functions=4 -mpreferred-stack-boundary=4 -funroll-loops -mfpmath=sse -msse4.1 -fomit-frame-pointer
	CXXFLAGS		+= -pg -fno-omit-frame-pointer -ggdb2
endif

